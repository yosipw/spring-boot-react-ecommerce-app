name: Check notification

on:
  push: {}
  release: {}

jobs:
  failing:
    name: test failure
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Try to fail
      run: exit 1
  if_failure:
    name: Only if failure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - id: Forced_failure
        name: Try to fail
        run: exit 1
      - id: Notify_failure
        name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK}}
          raw: >-
            {
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "title": "No avaliable in here"
            }
  failure:
    name: One failure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      
      - id: Forced_failure
        name: Forced failing step
        run: |
          echo "Output of this action will be localy overwriten to be a failure"
          echo "::set-output name=set_status::so_it_is_not_neglected"
          
      - name: Overwrite status
        id: overwrites
        env:
          steps: ${{ toJson(steps) }}
          needs: ${{ toJson(needs) }}
        run: |
          echo "needs<<EOF" >> $GITHUB_ENV
          echo $needs | jq '.[].result = "failure"' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "steps<<EOF" >> $GITHUB_ENV
          echo $steps | jq '.[].outcome = "failure"' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
      - name: Check overwrites
        env:
          steps: ${{ env.steps }}
          needs: ${{ env.needs }}
        run: |
          echo "Needs: $needs"
          echo "Steps: $steps"
          
      - name: MSTeams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ env.needs }}
          job: ${{ toJson(job) }}
          steps: ${{ env.steps }}
          dry_run: ${{ !github.event.action == 'release' }}

      - name: Confirm finish
        run: |
          echo 'MSTeams failure notification succeeded'
